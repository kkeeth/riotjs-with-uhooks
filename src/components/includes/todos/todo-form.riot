<todo-form>
  <form onsubmit={ addTodo }>
    <input
      name="todo"
      value=""
      placeholder="please input task"
      onkeyup={ onInput }
    />
    <button disabled={ !isInput }>
      Add #{ nextId }
    </button>
    <button
      class="danger"
      disabled={ !props.hasDoneTodo }
      onclick={ deleteDoneTodos }
    >
      delete done
    </button>
  </form>

  <script>
    import { useState } from 'uhooks'
    import { todoFormComponent } from '../../../libs/withHook'

    export default todoFormComponent(props => {
      const {
        todoList,
        setTodoList,
        nextId,
        setNextId,
        setHasDoneTodo
      } = props
      const [isInput, setIsInput] = useState(false)

      const addTodo = (e) => {
        e.preventDefault()
        if (e.target.todo.value) {
          const updatedTodoList = [
            ...todoList,
            {
              id: nextId + 1,
              title: e.target.todo.value,
              done: false
            }
          ]

          setHasDoneTodo(checkDoneTodo(updatedTodoList))
          setTodoList(updatedTodoList)
          setNextId(nextId + 1)
          e.target.todo.value = ""
        }
      }
      const onInput = (e) => {
        setIsInput(e.target.value)
      }
      const checkDoneTodo = (updatedTodoList) => {
        const tmpList = updatedTodoList || todoList
        return tmpList.some(item => item.done === true)
      }
      const deleteTodo = (todo) => {
        if (window.confirm('本当に削除してもよろしいですか? ')) {
          const updatedTodoList
            = todoList.filter(item => item.id !== todo.id)
          setHasDoneTodo(checkDoneTodo(updatedTodoList))
          setTodoList(updatedTodoList)
        }
      }
      const deleteDoneTodos = () => {
        if (window.confirm('本当に全てのtodoを削除してもよろしいですか? ')) {
          const updatedTodoList
            = todoList.filter(item => item.done !== true)
          setHasDoneTodo(false)
          setTodoList(updatedTodoList)
        }
      }

      return {
        isInput,
        setIsInput,
        nextId,
        onInput,
        addTodo,
        deleteDoneTodos,
      }
    })
  </script>

  <style>
    form input {
      font-size: 85%;
      padding: .4em;
      border: 1px solid #ccc;
      border-radius: 2px;
    }
  </style>
</todo-form>