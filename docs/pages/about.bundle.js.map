{"version":3,"file":"pages/about.bundle.js","mappings":"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","sources":["webpack://uhooks/./src/components/includes/todos/todo-form.riot","webpack://uhooks/./src/components/includes/todos/todo-list.riot","webpack://uhooks/./src/pages/todo.riot","webpack://uhooks/./node_modules/@webreflection/lie/esm/index.js","webpack://uhooks/./node_modules/uhooks/esm/hooks.js","webpack://uhooks/./node_modules/uhooks/esm/effect.js","webpack://uhooks/./node_modules/uhooks/esm/reducer.js","webpack://uhooks/./src/libs/withHook.js"],"sourcesContent":["<todo-form>\n  <form onsubmit={ addTodo }>\n    <input\n      name=\"todo\"\n      value=\"\"\n      placeholder=\"please input task\"\n      onkeyup={ onInput }\n    />\n    <button disabled={ !isInput }>\n      Add #{ nextId }\n    </button>\n    <button\n      class=\"danger\"\n      disabled={ !props.hasDoneTodo }\n      onclick={ deleteDoneTodos }\n    >\n      delete done\n    </button>\n  </form>\n\n  <script>\n    import { useState } from 'uhooks'\n    import { todoFormComponent } from '../../../libs/withHook'\n\n    export default todoFormComponent(props => {\n      const {\n        todoList,\n        setTodoList,\n        nextId,\n        setNextId,\n        setHasDoneTodo\n      } = props\n      const [isInput, setIsInput] = useState(false)\n\n      const addTodo = (e) => {\n        e.preventDefault()\n        if (e.target.todo.value) {\n          const updatedTodoList = [\n            ...todoList,\n            {\n              id: nextId + 1,\n              title: e.target.todo.value,\n              done: false\n            }\n          ]\n\n          setHasDoneTodo(checkDoneTodo(updatedTodoList))\n          setTodoList(updatedTodoList)\n          setNextId(nextId + 1)\n          setIsInput(false)\n          e.target.todo.value = \"\"\n        }\n      }\n      const onInput = (e) => {\n        setIsInput(e.target.value)\n      }\n      const checkDoneTodo = (updatedTodoList) => {\n        const tmpList = updatedTodoList || todoList\n        return tmpList.some(item => item.done === true)\n      }\n      const deleteTodo = (todo) => {\n        if (window.confirm('本当に削除してもよろしいですか? ')) {\n          const updatedTodoList\n            = todoList.filter(item => item.id !== todo.id)\n          setHasDoneTodo(checkDoneTodo(updatedTodoList))\n          setTodoList(updatedTodoList)\n        }\n      }\n      const deleteDoneTodos = () => {\n        if (window.confirm('本当に全てのtodoを削除してもよろしいですか? ')) {\n          const updatedTodoList\n            = todoList.filter(item => item.done !== true)\n          setHasDoneTodo(false)\n          setTodoList(updatedTodoList)\n        }\n      }\n\n      return {\n        isInput,\n        setIsInput,\n        nextId,\n        onInput,\n        addTodo,\n        deleteDoneTodos,\n      }\n    })\n  </script>\n\n  <style>\n    form input {\n      font-size: 85%;\n      padding: .4em;\n      border: 1px solid #ccc;\n      border-radius: 2px;\n    }\n  </style>\n</todo-form>","<todo-list>\n  <h4>todo list</h4>\n  <ul>\n    <li each={ todo in props.todoList } key={ todo.id }>\n      <label class={ todo.done ? 'completed' : null }>\n        <input\n          type=\"checkbox\"\n          checked={ todo.done }\n          onclick={ () => toggle(todo) }\n        />\n        { todo.title }\n      </label>\n      <button class=\"danger\" onclick={ () => deleteTodo(todo) }>\n        delete\n      </button>\n    </li>\n  </ul>\n  <p if={ props.todoList.length === 0 }>No Todos</p>\n\n  <script>\n    export default {\n      toggle(todo) {\n        todo.done = !todo.done\n        this.props.observable.trigger('toggle todo', this.props.todoList)\n      },\n      deleteTodo(todo) {\n        if (window.confirm('本当に削除してもよろしいですか？')) {\n          const updatedTodoList\n            = this.props.todoList.filter(item => item.id !== todo.id)\n          this.props.observable.trigger('delete todo', updatedTodoList)\n        }\n      }\n    }\n  </script>\n\n  <style>\n    h4 {\n      border-top: 1px solid #aaa;\n      padding-top: 1rem;\n    }\n    ul {\n      padding: 0;\n    }\n    li {\n      list-style-type: none;\n      padding: .2em 0;\n    }\n    li:hover {\n      background-color: #eee;\n    }\n    li .completed {\n      text-decoration: line-through;\n      color: #ccc;\n    }\n  </style>\n</todo-list>","<todo>\n  <div id=\"container\">\n    <h1>ToDo App</h1>\n\n    <todo-form\n      next-id={ nextId }\n      set-next-id={ setNextId }\n      todo-list={ todoList }\n      set-todo-list={ setTodoList }\n      has-done-todo={ hasDoneTodo }\n      set-has-done-todo={ setHasDoneTodo }\n    />\n\n    <h4>todo list</h4>\n    <ul>\n      <li each={ todo in todoList } key={ todo.id }>\n        <label class={ todo.done ? 'completed' : null }>\n          <input\n            type=\"checkbox\"\n            checked={ todo.done }\n            onclick={ () => toggle(todo) }\n          >\n          { todo.title }\n        </label>\n        <button class=\"danger\" onclick={ () => deleteTodo(todo) }>\n          delete\n        </button>\n      </li>\n    </ul>\n    <p if={ todoList.length === 0 }>No Todos</p>\n  </div>\n\n  <script>\n    import { useState } from 'uhooks'\n    import { todoPage } from '../libs/withHook'\n    import TodoForm from '../components/includes/todos/todo-form.riot'\n    import TodoList from '../components/includes/todos/todo-list.riot'\n\n    export default todoPage(props => {\n      const { initialNextId, initialTodoList } = props\n      const [nextId, setNextId] = useState(initialNextId)\n      const [todoList, setTodoList] = useState(initialTodoList)\n      const [hasDoneTodo, setHasDoneTodo] = useState(initialTodoList)\n\n      const toggle = (todo) => {\n        todo.done = !todo.done\n        setHasDoneTodo(checkDoneTodo())\n      }\n      const checkDoneTodo = (updatedTodoList) => {\n        const tmpList = updatedTodoList || todoList\n        return tmpList.some(item => item.done === true)\n      }\n      const deleteTodo = (todo) => {\n        if (window.confirm('本当に削除してもよろしいですか? ')) {\n          const updatedTodoList\n            = todoList.filter(item => item.id !== todo.id)\n          setHasDoneTodo(checkDoneTodo(updatedTodoList))\n          setTodoList(updatedTodoList)\n        }\n      }\n      const deleteDoneTodos = () => {\n        if (window.confirm('本当に全てのtodoを削除してもよろしいですか? ')) {\n          this.update({\n            hasDoneTodo: false,\n            todoList: this.state.todoList.filter(item => item.done !== true)\n          })\n        }\n      }\n\n      return {\n        nextId,\n        setNextId,\n        todoList,\n        setTodoList,\n        hasDoneTodo,\n        setHasDoneTodo,\n        toggle,\n        checkDoneTodo,\n        deleteTodo,\n      }\n    }, {\n      TodoForm,\n      TodoList,\n    })\n  </script>\n\n  <style>\n  #container {\n    display: block;\n    max-width: 600px;\n    margin: 5% auto;\n    padding: 20px;\n    box-shadow:\n      0 2px 2px 0 rgba(0,0,0,.14),\n      0 3px 1px -2px rgba(0,0,0,.2),\n      0 1px 5px 0 rgba(0,0,0,.12);\n  }\n  h4 {\n    border-top: 1px solid #aaa;\n    padding-top: 1rem;\n  }\n  input {\n    margin-bottom: 1rem;\n  }\n  ul {\n    padding: 0;\n  }\n  li {\n    list-style-type: none;\n    padding: 0.2em 0;\n    display: flex;\n    justify-content: space-between;\n  }\n  li:hover {\n    background-color: #eee;\n  }\n  li .completed {\n    text-decoration: line-through;\n    color: #ccc;\n  }\n  input[type=\"checkbox\"] {\n    margin-right: 10px;\n    margin-bottom: 0;\n  }\n  button + button {\n    margin-left: 1rem;\n  }\n  </style>\n</todo>","export default typeof Promise === 'function' ? Promise : function (fn) {\n  let queue = [], resolved = 0, value;\n  fn($ => {\n    value = $;\n    resolved = 1;\n    queue.splice(0).forEach(then);\n  });\n  return {then};\n  function then(fn) {\n    return (resolved ? setTimeout(fn, 0, value) : queue.push(fn)), this;\n  }\n};\n","import Lie from '@webreflection/lie';\n\nlet info = null, schedule = new Set;\n\nconst invoke = effect => {\n  const {$, r, h} = effect;\n  if (isFunction(r)) {\n    fx.get(h).delete(effect);\n    r();\n  }\n  if (isFunction(effect.r = $()))\n    fx.get(h).add(effect);\n};\n\nconst runSchedule = () => {\n  const previous = schedule;\n  schedule = new Set;\n  previous.forEach(({h, c, a, e}) => {\n    // avoid running schedules when the hook is\n    // re-executed before such schedule happens\n    if (e)\n      h.apply(c, a);\n  });\n};\n\nexport const fx = new WeakMap;\nexport const effects = [];\nexport const layoutEffects = [];\n\nexport function different(value, i) {\n  return value !== this[i];\n};\n\nexport const dropEffect = hook => {\n  const effects = fx.get(hook);\n  if (effects)\n    wait.then(() => {\n      effects.forEach(effect => {\n        effect.r();\n        effect.r = null;\n      });\n      effects.clear();\n    });\n};\n\nexport const getInfo = () => info;\n\nexport const hasEffect = hook => fx.has(hook);\n\nexport const isFunction = f => typeof f === 'function';\n\nexport const hooked = callback => {\n  const current = {h: hook, c: null, a: null, e: 0, i: 0, s: []};\n  return hook;\n  function hook() {\n    const prev = info;\n    info = current;\n    current.e = current.i = 0;\n    try {\n      return callback.apply(current.c = this, current.a = arguments);\n    }\n    finally {\n      info = prev;\n      if (effects.length)\n        wait.then(effects.forEach.bind(effects.splice(0), invoke));\n      if (layoutEffects.length)\n        layoutEffects.splice(0).forEach(invoke);\n    }\n  }\n};\n\nexport const reschedule = info => {\n  if (!schedule.has(info)) {\n    info.e = 1;\n    schedule.add(info);\n    wait.then(runSchedule);\n  }\n};\n\nexport const wait = new Lie($ => $());\n","import {fx, effects, layoutEffects, different, getInfo} from './hooks.js';\n\nconst createEffect = stack => (callback, guards) => {\n  const info = getInfo();\n  const {i, s, h} = info;\n  const call = i === s.length;\n  info.i++;\n  if (call) {\n    if (!fx.has(h))\n      fx.set(h, new Set);\n    s[i] = {$: callback, _: guards, r: null, h};\n  }\n  if (call || !guards || guards.some(different, s[i]._))\n    stack.push(s[i]);\n  s[i].$ = callback;\n  s[i]._ = guards;\n};\n\nexport const useEffect = createEffect(effects);\n\nexport const useLayoutEffect = createEffect(layoutEffects);\n","import {getInfo, isFunction, reschedule} from './hooks.js';\n\nconst getValue = (value, f) => isFunction(f) ? f(value) : f;\n\nexport const useReducer = (reducer, value, init) => {\n  const info = getInfo();\n  const {i, s} = info;\n  if (i === s.length)\n    s.push({\n      $: isFunction(init) ?\n          init(value) : getValue(void 0, value),\n      set: value => {\n        s[i].$ = reducer(s[i].$, value);\n        reschedule(info);\n      }\n    });\n  const {$, set} = s[info.i++];\n  return [$, set];\n};\n\nexport const useState = value => useReducer(getValue, value);\n","import * as uhooks from 'uhooks'\n\nexport const todoPage = (setup, components) => {\n  return {\n    onBeforeMount() {\n      this.isUpdated = false\n      this.hook = uhooks.hooked(() => {\n        Object.assign(this, setup(this.props, this.state))\n        if (this.isUpdated) {\n          this.update()\n        }\n      })\n      this.hook()\n      this.isUpdated = true\n    },\n    onBeforeUpdate() {\n      this.isUpdated = false\n      this.hook()\n      this.isUpdated = true\n    },\n    components: {\n      ...components,\n    },\n  }\n}\n\nexport const todoFormComponent = (setup, components) => {\n  return {\n    onBeforeMount() {\n      this.isUpdated = false\n      this.hook = uhooks.hooked(() => {\n        Object.assign(this, setup(this.props))\n        if (this.isUpdated) {\n          this.update()\n        }\n      })\n      this.hook()\n      this.isUpdated = true\n    },\n    onBeforeUpdate() {\n      this.isUpdated = false\n      this.hook()\n      this.isUpdated = true\n    },\n    components: {\n      ...components,\n    },\n  }\n}\n"],"names":["props","todoList","setTodoList","nextId","setNextId","setHasDoneTodo","isInput","setIsInput","onInput","e","target","value","addTodo","preventDefault","todo","updatedTodoList","id","title","done","some","item","checkDoneTodo","deleteDoneTodos","window","confirm","filter","hasDoneTodo","toggle","this","observable","trigger","deleteTodo","length","initialNextId","initialTodoList","TodoForm","TodoList","Promise","fn","queue","resolved","$","splice","forEach","then","setTimeout","push","info","schedule","Set","invoke","effect","r","h","isFunction","fx","get","delete","add","runSchedule","previous","c","a","apply","WeakMap","effects","layoutEffects","i","f","hooked","callback","current","hook","s","prev","arguments","wait","bind","createEffect","stack","guards","call","has","set","_","getValue","useState","reducer","init","reschedule","useReducer","todoPage","setup","components","onBeforeMount","isUpdated","Object","assign","state","update","onBeforeUpdate","todoFormComponent"],"sourceRoot":""}